#!/usr/bin/python

import os
import sys
import subprocess
import shlex
import time
import virtualbox
from virtualbox.library import LockType
import virtualbox.library
import virtualbox.library_ext
import virtualbox.pool
import re


pool = re.compile(r'\d+$')
BASE   = "testing"
BASE   = "testclone"
BASE   = "tetsing"
PREFIX = re.compile(r"^%s Clone" % BASE)


VBOXMANAGE = "/usr/bin/vboxmanage"

class vboxvdi:
    def __init__(self):
        pass
    
    def runme(self):
        pass

    def vmcount(self, vmprefix):
        cmd = VBOXMANAGE + "list vms"
        cmd = shlex.split(cmd)
##        while subprocess.Popen(cmd, stdout=subprocess.PIPE) as proc:
##            print proc.stdout.read()


def clonevm():
    print ("cloning machine")
     

def mygo():
    initsize = 5
    freesize = 2
    maxcount = 10
    mylist = []

    vbox = virtualbox.VirtualBox()
    mgr  = virtualbox.Manager()


    SHARED_LOCK = LockType(1)
    WRITE_LOCK  = LockType(2)

    SHARED_LOCK = LockType.shared
    WRITE_LOCK  = LockType.write

    VM_LOCK = virtualbox.library.LockType(3)

    MYLOCK = SHARED_LOCK

    # Does defined BASE vm exist?
    [mylist.append(vm.name) for vm in vbox.machines]
    if BASE not in mylist:
        print ("ERROR: base machine missing")
        sys.exit()

    MYBASE = vbox.find_machine(BASE)
 

    print
    print "VirtualBox Info:"
    print "  - version: %s" % vbox.version
    print "  - version: %s" % vbox.version_normalized

    

    print
    print "Base Image Info:"
    print "  - (%s)" % MYBASE.name
    print "  - (%s)" % MYBASE.state
    print "  - (%s)" % MYBASE.vrde_server
    print "  - cpu_count: (%s)" % MYBASE.cpu_count
    print "  - current_state_modified: (%s)" % MYBASE.current_state_modified

    print 
    print "Begin cloning:"
    state   = virtualbox.library.CloneMode(1)
    options = virtualbox.library.CloneOptions(1)

    a = virtualbox.library.IMachine.clone(MYBASE, mode=state)

    vbox1 = virtualbox.VirtualBox()
    a = vbox1.find_machine(a.name)

    session = mgr.get_session()

    print session.state
    
    a.lock_machine(session, MYLOCK)

    time.sleep (5)

    
    print "Taking snapshot: ", session.machine.current_snapshot

    if 1:
        x, p = session.machine.take_snapshot("test1", "test2", True)
    else:
        x, p = session.console.take_snapshot("test1", "test2", True)

    print "waiting"

    try:
        p.wait_for_completion(10)
    except:
        pass

    print x
 
#    session.unlock_machine()


    print "Configuring machine"
    a.virtualbox.library.IVRDEServer.set_vrde_property(port, 4444)

    sys.exit()


    if 0:
        session = MYBASE.create_session()
        machine = session.machine

    #manage = MYBASE.manager()
##    for i in  vbox.system_properties:
 ##       print i


#    MYBASE.clone_to("Pool ", "test")

#J print vm.system_properties

#    vb = virtualbox.Manager()
#    vb.manager(None, "list vms") 

#    mpool =  virtualbox.pool.MachinePool('tetsing')
#    a = virtualbox.library.IMachine.clone(mpool)
#    sessions = []
#    for i in range(3):
#       sessions.append(mpool.acquire("", ""))

##    for session in sessions:
##       with session.guest.create_session("choman", "abcd1234") as gs:
##           _, out, _ = gs.execute("ipconfig")

##
 ##   # You now have three running machines.
  ##  for session in sessions:
   ##     with session.guest.create_session("Mick", "password") as gs:
    ##        _, out, _ = gs.execute("ipconfig")
     ##       print(out)
##
 ##   for session in sessions:
 ##       pool.release(session)
##

    while True:
        mylist = []
        inuse  = []

        [mylist.append(vm) for vm in vbox.machines if PREFIX.search(vm.name)]
        [inuse.append(vm) for vm in vbox.machines if pool.search(vm.name)]

        cursize = len(mylist)

        if cursize < initsize:
            state   = virtualbox.library.CloneMode(1)
            options = virtualbox.library.CloneOptions(1)

            if 0:
                print "Cloning"
                MYBASE.clone_to("bob", state, options)

            else:
                a = virtualbox.library.IMachine.clone(MYBASE, mode=state)
                a.virtualbox.library.IVRDEServer.set_vrde_property(port, 4444)

                if 0:
                    a.take_snapshot("initial", "testing", True)
                    m = virtualbox.library.IMachine.take_snapshot(a, "bob", "alsbndl", False)
                    aclone = vbox.find_machine(a.name)
                    session = virtualbox.Session()
                    aclone.lock_machine(session, LockType(2))

#                console = session.console
                    aclone.take_snapshot("initialised", "base image", False)
                

##                b =virtualbox.library.IMachine.take_snapshot(a, "", "", False)
 ##               print "%s: %s" % (a.name, a.state)
  ##              a.take_snapshot("test", "test", False)
            
                
            #a.snapshot("", "", True)
            #a = virtualbox.library.clone(BASE, mode="machine", options=[], name=None, uuid=None, groups=[], basefolder='', register=True)

        #are machines in use
        
        if cursize > maxcount:
            # need more machine
        
            pass

        
#        vms = manage.manager("list", "vms")
        #vm = vbox.find_machine('testing002')

mygo()
    
        
         
